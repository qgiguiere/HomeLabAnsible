###############################################################################
# Get a list of all available upgrades on a list of remote Debian servers and #
# save the output locally in a file called UpgradesAvailable.txt. Timestamps  #
# are used to ensure that the information is current, and the program will    #
# overwrite any output file that is more than TIMEOUT seconds old. This       #
# should allow it enough time to get the information from all the hosts and   #
# write them to the file while at the same time preventing the file from      #
# containing outdated information. As an extra precaution, a                  #
# line of '*' characters will be added after all hosts have been checked.     #
###############################################################################

---
- name: list Upgrades
  hosts: all
  become: true
  gather_facts: true
  vars:
        timestamp: "{{ ansible_date_time.epoch }}"
 
  tasks:

    - name: "Create temp file on each remote host to write to"
      file:
              path: /tmp/holdtext
              state: touch
              owner: root
              group: root
              mode: 0644

    - name: "Create finished file on localhost"
      file:
              path: ./upgradesAvailable.txt #finalupgrades
              state: touch
              owner: root
              group: root
              mode: 0644
      delegate_to: localhost
 
    - name: "print hostname, IP Address, Description, & Kernel Version"
      lineinfile:
        dest: /tmp/holdtext
        regexp: ^Hostname=.*
        insertafter: ^# Hostname=.*
        line: "{{ ansible_date_time.epoch }}\nHostname: {{ ansible_hostname }}\nIP Address: {{ ansible_default_ipv4.address }}\nDescription: {{ ansible_distribution }} {{ ansible_system }} {{ ansible_distribution_version }} ({{ ansible_distribution_release }})\nKernel version: {{ ansible_kernel }}\n"
        state: present

    - name: "see if there are updates"
      command: "apt update"

    - name: "get list of upgrades available"
      command: "apt list --upgradable"
      register: updates

    - name: "organize list of upgrades"
      set_fact:
              donelist: "{{ updates.stdout_lines | list }}"

    - name: "print to temp file"
      lineinfile:
        dest: /tmp/holdtext
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present

    - name: "Ending seperation line for each file"
      lineinfile:
        dest: /tmp/holdtext
        line: "\n------------------------------------------------------------------------------------------\n"
        insertafter:
        state: present

    - name: "get file contents from temp file on remote hosts"
      command: cat /tmp/holdtext
      register: upgrades

    - name: "Organize file contents"
      set_fact:
              donelist: "{{ upgrades.stdout_lines | list }}"

    - name: "Combine contents of each remote host and print to localhost file"
      lineinfile:
        dest: ./upgradesAvailable.txt
        line: "{{ donelist | join('\n') }}"
        insertafter:
        state: present
      delegate_to: localhost

    - name: "Completed file line"
      lineinfile:
        dest: ./upgradesAvailable.txt
        line: "\n**************************************************************************************************************\n"
        insertafter:
        state: present
      delegate_to: localhost
      run_once: true

    - name: "Delete temp file on each remote host"
      file:
              path: /tmp/holdtext
              state: absent
